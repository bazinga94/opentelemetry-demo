name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-push-all:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set environment variables
        run: |
          echo "IMAGE_NAME=${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}" >> .env
          echo "DEMO_VERSION=${{ github.sha }}" >> .env

      # - name: Build all service images
      #   run: docker compose --env-file .env build

      # - name: Push all service images
      #   run: docker compose --env-file .env push

      # - name: Set up kubeconfig
      #   run: |
      #     mkdir -p ~/.kube
      #     echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 --decode > ~/.kube/config

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Update image tags in 07-deployments.yaml
        run: |
          ECR_URI=${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}
          FILE=k8s/07-deployments.yaml
          for svc in frontend checkout payment recommendation email currency product-catalog shipping ad cart accounting fraud-detection quote image-provider load-generator flagd-ui kafka; do
            sed -i "s|image: .*${svc}.*|image: ${ECR_URI}:${svc}-${{ github.sha }}|" $FILE
          done

      - name: Test kubectl connection
        run: |
          kubectl get nodes

      - name: Deploy to EKS
        run: |
          kubectl apply -f k8s/